{
  "version": 3,
  "sources": ["../../@kitql/helper/index.mjs", "../../@kitql/client/index.mjs"],
  "sourcesContent": ["function logGreen(str) {\n    return `\\x1b[32m${str}\\x1b[37m\\x1b[0m`;\n}\nfunction logMagneta(str) {\n    return `\\x1b[35m${str}\\x1b[37m\\x1b[0m`;\n}\nfunction logRed(str) {\n    return `\\u001B[31m${str}\\x1b[37m\\x1b[0m`;\n}\nfunction logCyan(str) {\n    return `\\x1b[36m${str}\\x1b[37m\\x1b[0m`;\n}\nfunction logYellow(str) {\n    return `\\x1b[33m${str}\\x1b[37m\\x1b[0m`;\n}\nclass Log {\n    constructor(toolName, options = {}) {\n        var _a, _b, _c;\n        this.toolName = toolName;\n        this.levelsToShow = (_a = options.levelsToShow) !== null && _a !== void 0 ? _a : 2;\n        this.withDate = (_b = options.withDate) !== null && _b !== void 0 ? _b : null;\n        this.prefixEmoji = (_c = options.prefixEmoji) !== null && _c !== void 0 ? _c : '';\n    }\n    setLevel(logLevel) {\n        this.levelsToShow = logLevel;\n    }\n    buildStr(msg, withError, withSuccess, indent) {\n        const table = [];\n        table.push(`${logMagneta(`[${this.toolName}]`)}`);\n        // DateTime or Time or nothing\n        if (this.withDate === 'dateTime') {\n            table.push(`${logMagneta(`[${new Date().toISOString()}]`)}`);\n        }\n        else if (this.withDate === 'time') {\n            table.push(`${logMagneta(`[${new Date().toISOString().split('T')[1]}]`)}`);\n        }\n        // Status icon or prefixEmoji\n        if (withError) {\n            table.push(`❌`);\n        }\n        else if (withSuccess) {\n            table.push(`✅`);\n        }\n        else {\n            table.push(`${this.prefixEmoji}`);\n        }\n        table.push(indent);\n        table.push(` ${msg}`);\n        return table.join('');\n    }\n    info(msg, conf = { level: 0, withSuccess: false }) {\n        var _a, _b;\n        const level = (_a = conf.level) !== null && _a !== void 0 ? _a : 0;\n        const withSuccess = (_b = conf.withSuccess) !== null && _b !== void 0 ? _b : false;\n        if (this.levelsToShow !== null && level <= this.levelsToShow) {\n            const indent = ' '.repeat(level);\n            console.info(this.buildStr(msg, false, withSuccess, indent));\n        }\n    }\n    success(msg, conf = { level: 0 }) {\n        this.info(msg, { level: conf.level, withSuccess: true });\n    }\n    error(msg) {\n        console.error(this.buildStr(msg, true, false, ''));\n    }\n}\n\n/**\n * Add things to the queryString.\n *\n * Normal usage:\n * ```\n * goto(`?${queryStringApprend($page.url.searchParams, { focus: \"Hello\" })}`);\n * ```\n * @param searchParams usually: $page.url.searchParams\n * @param queryString an object with key value pairs, something like { focus: \"Hello\" }\n * @returns a sorted query string\n */\nfunction queryStringApprend(searchParams, queryString) {\n    const query = {};\n    // 1 Destructure searchParams\n    searchParams.forEach((v, k) => {\n        query[k] = v;\n    });\n    // 2 Upset with our queryString\n    for (const key in queryString) {\n        query[key] = queryString[key];\n    }\n    // 3 Transform in a table\n    const qs = [];\n    for (const key in query) {\n        qs.push(`${key}=${query[key]}`);\n    }\n    // 4 send back the Query String\n    return qs.sort().join('&');\n}\n\nfunction sortObject(object) {\n    const sortedObj = {};\n    const keys = Object.keys(object);\n    // If there are no keys, the Object was not {}, let's return the object directly\n    if (keys.length === 0) {\n        return object;\n    }\n    keys.sort((key1, key2) => {\n        (key1 = key1.toLowerCase()), (key2 = key2.toLowerCase());\n        if (key1 < key2)\n            return -1;\n        if (key1 > key2)\n            return 1;\n        return 0;\n    });\n    for (const index in keys) {\n        const key = keys[index];\n        if (typeof object[key] == 'object' && !Array.isArray(object[key]) && object[key]) {\n            sortedObj[key] = sortObject(object[key]);\n        }\n        else {\n            sortedObj[key] = object[key];\n        }\n    }\n    return sortedObj;\n}\nfunction stry(obj, space = 2) {\n    if (obj === null) {\n        return null;\n    }\n    if (obj === undefined) {\n        return undefined;\n    }\n    const ordered = sortObject(obj);\n    return JSON.stringify(ordered, null, space);\n}\n\nasync function sleep(ms) {\n    if (ms <= 0) {\n        return;\n    }\n    return new Promise(resolve => setTimeout(resolve, ms));\n}\n\nexport { Log, logCyan, logGreen, logMagneta, logRed, logYellow, queryStringApprend, sleep, stry };\n", "import { stry, Log, logCyan, logGreen, logRed, logYellow, sleep } from '@kitql/helper';\n\nclass InMemoryCache {\n    constructor() {\n        this.cacheIndexes = {};\n        this.cacheData = {};\n    }\n    set(operationKey, data) {\n        const v = stry(data.variables, 0);\n        const fullKey = stry({ k: operationKey, v }, 0);\n        // Indexes\n        if (this.cacheIndexes[operationKey] !== undefined) {\n            if (this.cacheData[fullKey] === undefined) {\n                this.cacheIndexes[operationKey].push(v);\n            }\n        }\n        else {\n            this.cacheIndexes[operationKey] = [v];\n        }\n        // Data\n        this.cacheData[fullKey] = data;\n    }\n    get(operationKey, variables = null) {\n        // Data\n        const v = stry(variables, 0);\n        const fullKey = stry({ k: operationKey, v }, 0);\n        return this.cacheData[fullKey];\n    }\n    remove(operationKey, variables = null, allOperationKey = true) {\n        let nbDeleted = 0;\n        if (this.cacheIndexes[operationKey] !== undefined) {\n            if (allOperationKey) {\n                const keys = this.cacheIndexes[operationKey];\n                for (let i = 0; i < keys.length; i++) {\n                    const v = keys[i];\n                    const fullKey = stry({ k: operationKey, v }, 0);\n                    delete this.cacheData[fullKey];\n                    nbDeleted++;\n                }\n                delete this.cacheIndexes[operationKey];\n            }\n            else {\n                const v = stry(variables, 0);\n                const fullKey = stry({ k: operationKey, v }, 0);\n                if (this.cacheData[fullKey] !== undefined) {\n                    delete this.cacheData[fullKey];\n                    this.cacheIndexes[operationKey] = this.cacheIndexes[operationKey].filter((c) => c !== v);\n                    nbDeleted = 1;\n                }\n            }\n        }\n        return nbDeleted;\n    }\n}\n\nclass LocalStorageCache {\n    set(operationKey, data) {\n        const v = stry(data.variables, 0);\n        const fullKey = stry({ k: operationKey, v }, 0);\n        //INDEXES\n        const rawIndexes = window.localStorage.getItem(operationKey);\n        if (rawIndexes) {\n            const indexes = JSON.parse(rawIndexes);\n            if (!window.localStorage.getItem(fullKey)) {\n                indexes.push(v);\n                //only saves a valid array\n                window.localStorage.setItem(operationKey, JSON.stringify(indexes));\n            }\n        }\n        else {\n            window.localStorage.setItem(operationKey, JSON.stringify([v]));\n        }\n        // Data\n        window.localStorage.setItem(fullKey, stry(data, 0));\n    }\n    get(operationKey, variables = null) {\n        //Data\n        const v = stry(variables, 0);\n        const fullKey = stry({ k: operationKey, v }, 0);\n        const data = window.localStorage.getItem(fullKey);\n        if (!data)\n            return undefined;\n        return JSON.parse(data);\n    }\n    remove(operationKey, variables = null, allOperationKey = true) {\n        let nbDeleted = 0;\n        const rawIndexes = window.localStorage.getItem(operationKey);\n        if (rawIndexes) {\n            const indexes = JSON.parse(rawIndexes);\n            if (allOperationKey) {\n                const keysToDelete = indexes.map((v) => stry({ k: operationKey, v }, 0));\n                nbDeleted = keysToDelete.length;\n                window.localStorage.removeItem(operationKey);\n                keysToDelete.forEach((key) => window.localStorage.removeItem(key));\n            }\n            else {\n                const v = stry(variables, 0);\n                const fullKey = stry({ k: operationKey, v }, 0);\n                window.localStorage.removeItem(fullKey);\n                const newIndexes = indexes.filter((c) => c !== v);\n                window.localStorage.setItem(operationKey, JSON.stringify(newIndexes));\n                nbDeleted = 1;\n            }\n        }\n        return nbDeleted;\n    }\n}\n\nfunction printBlockString(n) {\n  return '\"\"\"\\n' + JSON.stringify(n).slice(1, -1) + '\\n\"\"\"';\n}\n\nvar r = JSON.stringify;\n\nfunction print(r$1) {\n  if (Array.isArray(r$1)) {\n    return r$1.map(print);\n  } else if (null == r$1 || \"object\" != typeof r$1) {\n    return r$1 ? \"\" + r$1 : \"\";\n  }\n  switch (r$1.kind) {\n   case \"OperationDefinition\":\n    var t = join([ r$1.operation, print(r$1.name) + wrap(\"(\", join(print(r$1.variableDefinitions), \", \"), \")\"), join(print(r$1.directives), \" \") ], \" \");\n    return (\"query\" === t ? \"\" : t + \" \") + print(r$1.selectionSet);\n\n   case \"VariableDefinition\":\n    return print(r$1.variable) + \": \" + print(r$1.type) + wrap(\" = \", print(r$1.defaultValue)) + wrap(\" \", join(print(r$1.directives), \" \"));\n\n   case \"Field\":\n    return join([ wrap(\"\", print(r$1.alias), \": \") + print(r$1.name) + wrap(\"(\", join(print(r$1.arguments), \", \"), \")\"), join(print(r$1.directives), \" \"), print(r$1.selectionSet) ], \" \");\n\n   case \"StringValue\":\n    return r$1.isBlockString ? printBlockString(r$1.value) : r(r$1.value);\n\n   case \"BooleanValue\":\n    return r$1.value ? \"true\" : \"false\";\n\n   case \"NullValue\":\n    return \"null\";\n\n   case \"IntValue\":\n   case \"FloatValue\":\n   case \"EnumValue\":\n   case \"Name\":\n    return r$1.value;\n\n   case \"ListValue\":\n    return \"[\" + join(print(r$1.values), \", \") + \"]\";\n\n   case \"ObjectValue\":\n    return \"{\" + join(print(r$1.fields), \", \") + \"}\";\n\n   case \"ObjectField\":\n    return r$1.name.value + \": \" + print(r$1.value);\n\n   case \"Variable\":\n    return \"$\" + r$1.name.value;\n\n   case \"Document\":\n    return join(print(r$1.definitions), \"\\n\\n\") + \"\\n\";\n\n   case \"SelectionSet\":\n    return block(print(r$1.selections));\n\n   case \"Argument\":\n    return r$1.name.value + \": \" + print(r$1.value);\n\n   case \"FragmentSpread\":\n    return \"...\" + print(r$1.name) + wrap(\" \", join(print(r$1.directives), \" \"));\n\n   case \"InlineFragment\":\n    return join([ \"...\", wrap(\"on \", print(r$1.typeCondition)), join(print(r$1.directives), \" \"), print(r$1.selectionSet) ], \" \");\n\n   case \"FragmentDefinition\":\n    return \"fragment \" + r$1.name.value + wrap(\"(\", join(print(r$1.variableDefinitions), \", \"), \")\") + \" on \" + print(r$1.typeCondition) + \" \" + wrap(\"\", join(print(r$1.directives), \" \"), \" \") + print(r$1.selectionSet);\n\n   case \"Directive\":\n    return \"@\" + r$1.name.value + wrap(\"(\", join(print(r$1.arguments), \", \"), \")\");\n\n   case \"NamedType\":\n    return r$1.name.value;\n\n   case \"ListType\":\n    return \"[\" + print(r$1.type) + \"]\";\n\n   case \"NonNullType\":\n    return print(r$1.type) + \"!\";\n\n   default:\n    return \"\";\n  }\n}\n\nvar join = function(e, n) {\n  return e && e.filter((function(e) {\n    return e;\n  })).join(n || \"\") || \"\";\n};\n\nvar block = function(e) {\n  return wrap(\"{\\n  \", join(e, \"\\n\").replace(/\\n/g, \"\\n  \"), \"\\n}\");\n};\n\nvar wrap = function(e, n, r) {\n  return n ? e + n + (r || \"\") : \"\";\n};\n\nvar RequestStatus;\n(function (RequestStatus) {\n    RequestStatus[\"NEVER\"] = \"NEVER\";\n    RequestStatus[\"LOADING\"] = \"LOADING\";\n    RequestStatus[\"DONE\"] = \"DONE\";\n})(RequestStatus || (RequestStatus = {}));\nvar RequestFrom;\n(function (RequestFrom) {\n    RequestFrom[\"NODATA\"] = \"NODATA\";\n    RequestFrom[\"NETWORK\"] = \"NETWORK\";\n    RequestFrom[\"SSR\"] = \"SSR\";\n    RequestFrom[\"CACHE\"] = \"CACHE\";\n})(RequestFrom || (RequestFrom = {}));\nvar ResponseResultType;\n(function (ResponseResultType) {\n    ResponseResultType[\"Query\"] = \"Query\";\n    ResponseResultType[\"Mutation\"] = \"Mutation\";\n})(ResponseResultType || (ResponseResultType = {}));\nconst defaultStoreValue = {\n    status: RequestStatus.NEVER,\n    isFetching: false,\n    date: new Date().getTime(),\n    operationName: '???',\n    operationType: ResponseResultType.Query,\n    variables: null,\n    data: null,\n    errors: null,\n    from: RequestFrom.NODATA,\n    isOutdated: false\n};\nclass KitQLClient {\n    constructor(options) {\n        var _a, _b;\n        const { url, cacheMs, credentials, headers, policy, headersContentType, endpointNetworkDelayMs, endpointSSRDelayMs } = options !== null && options !== void 0 ? options : {};\n        this.url = url;\n        this.policy = policy !== null && policy !== void 0 ? policy : 'cache-first';\n        this.headers = headers !== null && headers !== void 0 ? headers : {};\n        this.cacheMs = cacheMs !== null && cacheMs !== void 0 ? cacheMs : 1000 * 60 * 3;\n        this.credentials = credentials;\n        this.headersContentType = headersContentType !== null && headersContentType !== void 0 ? headersContentType : 'application/graphql+json';\n        this.logType = (_a = options.logType) !== null && _a !== void 0 ? _a : [];\n        this.cacheData = (_b = options.cacheImplementation) !== null && _b !== void 0 ? _b : new InMemoryCache();\n        this.endpointNetworkDelayMs = endpointNetworkDelayMs !== null && endpointNetworkDelayMs !== void 0 ? endpointNetworkDelayMs : 0;\n        this.endpointSSRDelayMs = endpointSSRDelayMs !== null && endpointSSRDelayMs !== void 0 ? endpointSSRDelayMs : 0;\n        this.log = new Log('KitQL Client');\n        this.log.info('This lib was deprecated check https://www.kitql.dev/docs/migrating-to-0.7.0 to upgrade.');\n    }\n    getHeaders() {\n        return this.headers;\n    }\n    setHeaders(headers) {\n        this.headers = headers;\n    }\n    logOperation(from, operation, variables = null) {\n        this.log.info(\n        // `${logCyan('Mode:')} ` +\n        // \t`${logGreen(browser ? 'browser' : 'server')}, ` +\n        `${logCyan('From:')} ${logGreen(from)}, ${new Array(7 - from.length + 1).join(' ')}` +\n            `${logCyan('Operation:')} ${logGreen(operation)}` +\n            `${variables ? `, ${logCyan('Variables:')} ${logGreen(variables)}` : ``}`);\n    }\n    getLogsStatements(browser) {\n        const browserAndWantLog = browser && this.logType.includes('client');\n        const serverAndWantLog = !browser && this.logType.includes('server');\n        const logOp = this.logType.includes('operation') && (browserAndWantLog !== null && browserAndWantLog !== void 0 ? browserAndWantLog : serverAndWantLog);\n        const logOpVar = this.logType.includes('operationAndvariables') && (browserAndWantLog !== null && browserAndWantLog !== void 0 ? browserAndWantLog : serverAndWantLog);\n        const logRawResult = this.logType.includes('rawResult') && (browserAndWantLog !== null && browserAndWantLog !== void 0 ? browserAndWantLog : serverAndWantLog);\n        return { logOp, logOpVar, logRawResult };\n    }\n    requestCache({ variables, operationName, cacheMs, browser }) {\n        const logStatements = this.getLogsStatements(browser);\n        // No caching in the server for now! (Need to have a session identification to not mix things up)\n        if (browser) {\n            const cachedData = this.cacheData.get(operationName, variables);\n            if (cachedData !== undefined) {\n                const xMs = new Date().getTime() - cachedData.date;\n                // cache time of the query or of the default config\n                if (xMs < (cacheMs !== null && cacheMs !== void 0 ? cacheMs : this.cacheMs)) {\n                    if (logStatements.logOpVar) {\n                        this.logOperation(RequestFrom.CACHE, operationName, stry(variables, 0));\n                    }\n                    else if (logStatements.logOp) {\n                        this.logOperation(RequestFrom.CACHE, operationName);\n                    }\n                    return { ...cachedData, from: RequestFrom.CACHE, isOutdated: false };\n                }\n                return { ...cachedData, from: RequestFrom.CACHE, isOutdated: true };\n            }\n        }\n        return null;\n    }\n    async request({ skFetch, document, variables, operationName, operationType, browser }) {\n        const logStatements = this.getLogsStatements(browser);\n        // User help, he is doing wrong\n        if (!browser && !skFetch) {\n            this.log.error(`I think that either:` +\n                `\\n\\t${logRed(`1/`)} you forgot to provide \\`${logYellow(`fetch`)}\\`! As we are in SSR here. ` +\n                `\\n\\t   It should be something like:` +\n                `\\n` +\n                `\\n\\t<script context=\"module\" lang=\"ts\">` +\n                `\\n\\t  export async function load({ ${logYellow(`fetch`)} }) {` +\n                `\\n\\t    ${logYellow('await')} ${logCyan(operationName)}.queryLoad({ ${logYellow(`fetch`)}, variables: { ... } });` +\n                `\\n\\t    return {};` +\n                `\\n\\t  }` +\n                `\\n\\t</script>` +\n                `\\n` +\n                `\\n\\t${logRed(`2/`)} you should run this in a browser only.`);\n        }\n        const fetchToUse = skFetch ? skFetch : fetch;\n        const dataToReturn = {\n            date: new Date().getTime(),\n            operationName,\n            operationType,\n            variables,\n            from: RequestFrom.NETWORK,\n            data: null,\n            errors: null,\n            isOutdated: false\n        };\n        try {\n            const res = await fetchToUse(this.url, {\n                method: 'POST',\n                credentials: this.credentials,\n                headers: { ...this.headers, 'Content-Type': this.headersContentType },\n                body: JSON.stringify({\n                    query: print(document),\n                    variables\n                })\n            });\n            if (res.url === '') {\n                // In the browser we see a flickering from NETWORK to SSR, because it's the Real SSR coming with a from network... Replaced by the SSR side!\n                dataToReturn.from = RequestFrom.SSR;\n                await sleep(this.endpointSSRDelayMs); // adding the delay after the request\n            }\n            else {\n                await sleep(this.endpointNetworkDelayMs); // adding the delay after the request\n            }\n            if (logStatements.logOpVar) {\n                this.logOperation(dataToReturn.from, operationName, stry(variables, 0));\n            }\n            else if (logStatements.logOp) {\n                this.logOperation(dataToReturn.from, operationName);\n            }\n            if (res.status !== 200) {\n                if (res.statusText === '') {\n                    dataToReturn.errors = [new Error(`${res.status} - ${await res.text()}`)];\n                }\n                else {\n                    dataToReturn.errors = [new Error(`${res.status} - ${res.statusText}`)];\n                }\n                return dataToReturn;\n            }\n            const dataJson = await res.json();\n            if (logStatements.logRawResult) {\n                this.log.info(`${logCyan('dataJson:')} ` + `${stry(dataJson, 0)}`);\n            }\n            if (dataJson.errors && dataJson.errors.length > 0) {\n                dataToReturn.errors = dataJson.errors;\n                return dataToReturn;\n            }\n            dataToReturn.data = dataJson.data;\n            // No caching in the server for now! (Need to have a session identification to not mix things up)\n            if (browser) {\n                this.cacheData.set(operationName, dataToReturn);\n            }\n            return dataToReturn;\n        }\n        catch (errors) {\n            dataToReturn.errors = [errors];\n            return dataToReturn;\n        }\n    }\n    cacheRemove(operationKey, params) {\n        const nbDeleted = this.cacheData.remove(operationKey, params.variables, params.allOperationKey);\n        this.logInfo(operationKey, 'ResetCache', nbDeleted.toString());\n        return nbDeleted;\n    }\n    logInfo(operationName, key, value) {\n        const browserAndWantLog = this.logType.includes('client');\n        if (browserAndWantLog) {\n            this.log.info(`${logCyan(`${key}:`)} ${logGreen(value)}, ` +\n                `${logCyan('Operation:')} ${logGreen(operationName)}`);\n        }\n    }\n    cacheUpdate(operationKey, data, params) {\n        const dataCached = this.cacheData.get(operationKey, params.variables);\n        if (dataCached) {\n            const toReturn = { ...dataCached, data, variables: params.variables };\n            this.cacheData.set(operationKey, toReturn);\n            return toReturn;\n        }\n        return undefined;\n    }\n}\n\n/**\n * Check if on of the stores is in loading state\n * @param stores one or more stores to check\n * @returns true if at least 1 store is in loading state\n */\nfunction isLoading(stores) {\n    if (Array.isArray(stores)) {\n        return stores.some((store) => store.status === RequestStatus.LOADING);\n    }\n    return stores.status === RequestStatus.LOADING;\n}\n\nexport { InMemoryCache, KitQLClient, LocalStorageCache, RequestFrom, RequestStatus, ResponseResultType, defaultStoreValue, isLoading };\n"],
  "mappings": "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",
  "names": ["e", "r", "RequestStatus", "RequestFrom", "ResponseResultType"]
}
